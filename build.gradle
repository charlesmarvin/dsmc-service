apply plugin: 'java'
apply plugin: 'application'

group = 'com.dsmc'
version = 'SNAPSHOT'

description = """Driving School Management Console"""

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    mavenLocal()
}
dependencies {
    compile group: 'com.sparkjava', name: 'spark-core', version: '2.3'
    compile group: 'org.postgresql', name: 'postgresql', version: '9.4-1205-jdbc42'
    compile group: 'com.auth0', name:'java-jwt', version:'2.1.0'
    compile group: 'commons-codec', name: 'commons-codec', version: '1.10'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
    compile group: 'org.jooq', name:'jooq', version: '3.7.1'
    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.+'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.4'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.6.3'
    compile group: 'com.google.guava', name: 'guava', version: '19.0'
    testCompile group: 'junit', name: 'junit', version: '4.+'
}

mainClassName = 'com.dsmc.App'

run {
    systemProperties System.getProperties()
}

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        classpath 'org.jooq:jooq:3.7.+'
        classpath 'org.jooq:jooq-meta:3.7.+'
        classpath 'org.jooq:jooq-codegen:3.7.+'
        classpath 'org.postgresql:postgresql:9.4-1205-jdbc42'
    }
}

task codegen << {
    def writer = new StringWriter()
    def xml = new groovy.xml.MarkupBuilder(writer)
            .configuration('xmlns': 'http://www.jooq.org/xsd/jooq-codegen-3.7.0.xsd') {
        jdbc() {
            driver('org.postgresql.Driver')
            url('jdbc:postgresql:dsmc')
            user('app_user')
            password('app_user')
        }
        generator() {
            database() {
                name('org.jooq.util.postgres.PostgresDatabase')
                includes('.*')
                inputSchema('public')
            }

            generate() {
                pojos(true)
            }

            target() {
                packageName('com.dsmc.data')
                directory('src/main/java')
            }
        }
    }
    println(writer.toString())
    org.jooq.util.GenerationTool.main(
            javax.xml.bind.JAXB.unmarshal(
                    new StringReader(writer.toString()),
                    org.jooq.util.jaxb.Configuration.class
            )
    )
}