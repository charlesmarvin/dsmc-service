/**
 * This class is generated by jOOQ
 */
package com.dsmc.data.tables;


import com.dsmc.data.Keys;
import com.dsmc.data.Public;
import com.dsmc.data.tables.records.InstructorRecord;

import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Instructor extends TableImpl<InstructorRecord> {

	private static final long serialVersionUID = 1805369955;

	/**
	 * The reference instance of <code>public.instructor</code>
	 */
	public static final Instructor INSTRUCTOR = new Instructor();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<InstructorRecord> getRecordType() {
		return InstructorRecord.class;
	}

	/**
	 * The column <code>public.instructor.id</code>.
	 */
	public final TableField<InstructorRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.instructor.first_name</code>.
	 */
	public final TableField<InstructorRecord, String> FIRST_NAME = createField("first_name", org.jooq.impl.SQLDataType.VARCHAR.length(30).defaulted(true), this, "");

	/**
	 * The column <code>public.instructor.last_name</code>.
	 */
	public final TableField<InstructorRecord, String> LAST_NAME = createField("last_name", org.jooq.impl.SQLDataType.VARCHAR.length(30).defaulted(true), this, "");

	/**
	 * The column <code>public.instructor.created_on</code>.
	 */
	public final TableField<InstructorRecord, Date> CREATED_ON = createField("created_on", org.jooq.impl.SQLDataType.DATE, this, "");

	/**
	 * The column <code>public.instructor.email</code>.
	 */
	public final TableField<InstructorRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR.length(150).defaulted(true), this, "");

	/**
	 * The column <code>public.instructor.active</code>.
	 */
	public final TableField<InstructorRecord, String> ACTIVE = createField("active", org.jooq.impl.SQLDataType.CHAR.length(1).defaulted(true), this, "");

	/**
	 * The column <code>public.instructor.gender</code>.
	 */
	public final TableField<InstructorRecord, String> GENDER = createField("gender", org.jooq.impl.SQLDataType.CHAR.length(1).defaulted(true), this, "");

	/**
	 * The column <code>public.instructor.primary_phone</code>.
	 */
	public final TableField<InstructorRecord, String> PRIMARY_PHONE = createField("primary_phone", org.jooq.impl.SQLDataType.VARCHAR.length(12).defaulted(true), this, "");

	/**
	 * The column <code>public.instructor.secondary_phone</code>.
	 */
	public final TableField<InstructorRecord, String> SECONDARY_PHONE = createField("secondary_phone", org.jooq.impl.SQLDataType.VARCHAR.length(12).defaulted(true), this, "");

	/**
	 * The column <code>public.instructor.address_line1</code>.
	 */
	public final TableField<InstructorRecord, String> ADDRESS_LINE1 = createField("address_line1", org.jooq.impl.SQLDataType.VARCHAR.length(150).defaulted(true), this, "");

	/**
	 * The column <code>public.instructor.address_line2</code>.
	 */
	public final TableField<InstructorRecord, String> ADDRESS_LINE2 = createField("address_line2", org.jooq.impl.SQLDataType.VARCHAR.length(150).defaulted(true), this, "");

	/**
	 * The column <code>public.instructor.city</code>.
	 */
	public final TableField<InstructorRecord, String> CITY = createField("city", org.jooq.impl.SQLDataType.VARCHAR.length(50).defaulted(true), this, "");

	/**
	 * The column <code>public.instructor.state</code>.
	 */
	public final TableField<InstructorRecord, String> STATE = createField("state", org.jooq.impl.SQLDataType.CHAR.length(2).defaulted(true), this, "");

	/**
	 * The column <code>public.instructor.zipcode</code>.
	 */
	public final TableField<InstructorRecord, String> ZIPCODE = createField("zipcode", org.jooq.impl.SQLDataType.CHAR.length(10).defaulted(true), this, "");

	/**
	 * The column <code>public.instructor.certification_date</code>.
	 */
	public final TableField<InstructorRecord, Date> CERTIFICATION_DATE = createField("certification_date", org.jooq.impl.SQLDataType.DATE, this, "");

	/**
	 * The column <code>public.instructor.company_id</code>.
	 */
	public final TableField<InstructorRecord, Integer> COMPANY_ID = createField("company_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * Create a <code>public.instructor</code> table reference
	 */
	public Instructor() {
		this("instructor", null);
	}

	/**
	 * Create an aliased <code>public.instructor</code> table reference
	 */
	public Instructor(String alias) {
		this(alias, INSTRUCTOR);
	}

	private Instructor(String alias, Table<InstructorRecord> aliased) {
		this(alias, aliased, null);
	}

	private Instructor(String alias, Table<InstructorRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<InstructorRecord, Integer> getIdentity() {
		return Keys.IDENTITY_INSTRUCTOR;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<InstructorRecord> getPrimaryKey() {
		return Keys.INSTRUCTOR_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<InstructorRecord>> getKeys() {
		return Arrays.<UniqueKey<InstructorRecord>>asList(Keys.INSTRUCTOR_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<InstructorRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<InstructorRecord, ?>>asList(Keys.INSTRUCTOR__INSTRUCTOR_IBFK_1);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Instructor as(String alias) {
		return new Instructor(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Instructor rename(String name) {
		return new Instructor(name, null);
	}
}
